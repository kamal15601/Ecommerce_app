# Production environment values
environment: production

replicaCount: 3

image:
  backend:
    repository: ecommerce-backend
    tag: latest
    pullPolicy: Always
  nginx:
    repository: nginx
    tag: alpine
    pullPolicy: Always

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: ecommerce.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: ecommerce-prod-tls
      hosts:
        - ecommerce.example.com

postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "15"
    pullPolicy: IfNotPresent
  auth:
    database: ecommerce_prod
    username: ecommerce_user
    postgresPassword: production_password_very_secure_123456789
  persistence:
    size: 50Gi
    storageClass: fast-ssd
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

redis:
  enabled: true
  image:
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  auth:
    password: redis_production_password_very_secure
  persistence:
    size: 5Gi
    storageClass: fast-ssd
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "400m"

persistence:
  enabled: true

secrets:
  secretKey: production-secret-key-extremely-secure-random-string-12345
  jwtSecretKey: production-jwt-secret-key-extremely-secure-random-string-12345

config:
  extraEnvVars:
    DEBUG: "False"
    LOG_LEVEL: "WARNING"

resources:
  requests:
    memory: "1Gi"
    cpu: "500m"
  limits:
    memory: "2Gi"
    cpu: "1000m"

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 70

nodeSelector:
  node-type: production

tolerations:
- key: "production"
  operator: "Equal"
  value: "true"
  effect: "NoSchedule"

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/name
          operator: In
          values:
          - ecommerce
      topologyKey: kubernetes.io/hostname
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      preference:
        matchExpressions:
        - key: node-type
          operator: In
          values:
          - production
