# Staging environment values
environment: staging

replicaCount: 2

image:
  backend:
    repository: ecommerce-backend
    tag: latest
    pullPolicy: Always
  nginx:
    repository: nginx
    tag: alpine
    pullPolicy: Always

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
  hosts:
    - host: ecommerce-staging.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: ecommerce-staging-tls
      hosts:
        - ecommerce-staging.example.com

postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "15"
    pullPolicy: IfNotPresent
  auth:
    database: ecommerce_staging
    username: ecommerce_user
    postgresPassword: staging_password_secure123
  persistence:
    size: 10Gi
    storageClass: fast-ssd
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

redis:
  enabled: true
  image:
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  auth:
    password: redis_staging_password_secure
  persistence:
    size: 2Gi
    storageClass: fast-ssd
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

persistence:
  enabled: true

secrets:
  secretKey: staging-secret-key-very-secure-12345
  jwtSecretKey: staging-jwt-secret-key-very-secure-12345

config:
  extraEnvVars:
    DEBUG: "False"
    LOG_LEVEL: "INFO"

resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "1Gi"
    cpu: "500m"

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - ecommerce
        topologyKey: kubernetes.io/hostname
