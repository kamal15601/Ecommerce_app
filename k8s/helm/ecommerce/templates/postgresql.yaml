{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ecommerce.fullname" . }}-postgresql
  labels:
    {{- include "ecommerce.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ecommerce.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "ecommerce.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        ports:
        - containerPort: 5432
          name: postgresql
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.auth.database }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.auth.username }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "ecommerce.fullname" . }}-secret
              key: DATABASE_PASSWORD
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgresql.auth.username }}
            - -d
            - {{ .Values.postgresql.auth.database }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgresql.auth.username }}
            - -d
            - {{ .Values.postgresql.auth.database }}
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 10 }}
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: {{ include "ecommerce.fullname" . }}-postgresql-pvc
      - name: init-scripts
        configMap:
          name: {{ include "ecommerce.fullname" . }}-db-init
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ecommerce.fullname" . }}-postgresql
  labels:
    {{- include "ecommerce.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: postgresql
    protocol: TCP
    name: postgresql
  selector:
    {{- include "ecommerce.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: database
{{- end }}
