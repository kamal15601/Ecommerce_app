version: '3.8'

services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: ecommerce-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - DATABASE_NAME=ecommerce
      - DATABASE_USER=ecommerce_user
      - DATABASE_PASSWORD=ecommerce_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_pass
    env_file:
      - .env.docker
    depends_on:
      - database
      - redis
    volumes:
      - ../backend:/app
      - uploads:/app/uploads
    networks:
      - ecommerce-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  database:
    image: postgres:15
    container_name: ecommerce-db
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce_user -d ecommerce"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    build:
      context: ../docker-compose
      dockerfile: redis.Dockerfile
    container_name: ecommerce-redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=redis_pass
    volumes:
      - redis_data:/data
      - ../docker-compose/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - ecommerce-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: ../docker-compose
      dockerfile: nginx.Dockerfile
    container_name: ecommerce-nginx
    ports:
      - "80:80"
    volumes:
      - ../docker-compose/nginx.conf:/etc/nginx/nginx.conf
      - uploads:/var/www/uploads
    depends_on:
      - backend
    networks:
      - ecommerce-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  uploads:

networks:
  ecommerce-network:
    driver: bridge
